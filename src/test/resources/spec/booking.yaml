openapi: 3.0.3
info:
  title: Restful-Booker API (v2)
  description: |
    Restful-booker is a practice API to test Create, Read, Update, Delete operations and authentication.
    The API resets itself every 10 minutes back to the default state.
  version: "2.0.0"
servers:
  - url: https://automationintesting.online/api
paths:
  /booking/actuator/health:
    get:
      summary: Health check
      description: Check if the API is running.
      responses:
        '200':
          description: API is up and running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: UP

  /auth/login:
    post:
      summary: Create authentication token
      description: Generates a token to be used for cookie-based authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Token successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: abc123token
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid credentials

  /booking:
    post:
      summary: Create booking
      description: Create a new booking.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: Booking successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingid:
                    type: integer
                    example: 10
                  booking:
                    $ref: '#/components/schemas/Booking'
        '400':
          description: Validation error when creating a booking
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
              examples:
                firstname_too_short:
                  summary: Firstname validation
                  value:
                    errors:
                      - "size must be between 3 and 18"
                lastname_too_long:
                  summary: Lastname validation
                  value:
                    errors:
                      - "size must be between 3 and 18"
                phone_invalid:
                  summary: Phone number validation
                  value:
                    errors:
                      - "size must be between 11 and 21"
                email_invalid:
                  summary: Email validation
                  value:
                    errors:
                      - "must be a well-formed email address"
                invalid_dates:
                  summary: Checkout before checkin
                  value:
                    errors:
                      - "Failed to create booking"

  /booking/{id}:
    get:
      summary: Get booking by ID
      description: Retrieve details of a specific booking.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
          example: token=abc123token
      responses:
        '200':
          description: Booking details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized, missing or invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

    put:
      summary: Update booking
      description: Update an entire booking (authentication required).
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
          example: token=abc123token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: Booking updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized, missing or invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

    patch:
      summary: Partially update booking
      description: Update selected fields of a booking (authentication required).
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
          example: token=abc123token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                depositpaid:
                  type: boolean
                firstname:
                  type: string
                lastname:
                  type: string
      responses:
        '200':
          description: Booking partially updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized, missing or invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

    delete:
      summary: Delete booking
      description: Delete an existing booking (authentication required).
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: Cookie
          in: header
          required: true
          schema:
            type: string
          example: token=abc123token
      responses:
        '201':
          description: Booking deleted successfully
        '401':
          description: Unauthorized, missing or invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

components:
  schemas:
    Booking:
      type: object
      required: [roomid, firstname, lastname, depositpaid, bookingdates, email, phone]
      properties:
        roomid:
          type: integer
          example: 2
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        depositpaid:
          type: boolean
          example: true
        bookingdates:
          type: object
          properties:
            checkin:
              type: string
              format: date
              example: 2025-10-13
            checkout:
              type: string
              format: date
              example: 2025-10-15
        email:
          type: string
          format: email
          example: john.doe@example.com
        phone:
          type: string
          example: "1234567890"
